{"openapi": "3.1.0", "info": {"title": "FastAPI", "version": "0.1.0"}, "paths": {"/api/users/register": {"post": {"summary": "Register", "description": "Регистрация новых пользователей.\n\nArgs:\n    user (CreateUser): пользователь\n    session(AsyncSession): сессия подключения к бд\n\nRaises:\n    HTTPException: пользователь с таким именем уже существует\n\nReturns:\n    Response: статус код 200, пользователь успешно создан", "operationId": "register_api_users_register_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUser"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/auth": {"post": {"summary": "Auth For Access Token", "description": "Аутентификация пользователя для получения токена доступа.\n\nArgs:\n    form_data (Annotated[OAuth2PasswordRequestForm, Depends]):\n    OAuth2 форма аутентификации\n    session(AsyncSession): сессия подключения к бд\n\nRaises:\n    HTTPException: неверрные данные пользователя\n\nReturns:\n    AccessToken: токен доступа и тип токена", "operationId": "auth_for_access_token_api_users_auth_post", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_auth_for_access_token_api_users_auth_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccessToken"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/promote-to-admin": {"post": {"summary": "Promote To Admin", "description": "Назначения пользователя администратором.\n\nArgs:\n    username (str): имя пользователя\n    current_user (Annotated[User, Depends]): текущий пользователь\n    session(AsyncSession): сессия подключения к бд\n\nRaises:\n    HTTPException: текущий пользователь не является администратором\n    HTTPException: пользователь с таким именем не найден\n\nReturns:\n    Response: статус код 200, пользователь назначен администратором", "operationId": "promote_to_admin_api_users_promote_to_admin_post", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "username", "in": "query", "required": true, "schema": {"type": "string", "title": "Username"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/advertisements/create": {"post": {"summary": "Create Advertisement", "description": "Создать новое объявление.\n\nArgs:\n    advertisement (CreateAdvertisement): объявление\n    current_user (Annotated[User, Depends): текущий пользователь\n    session(AsyncSession): сессия подключения к бд\n\nReturns:\n    Response: статус код 200, объявление создано", "operationId": "create_advertisement_api_advertisements_create_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateAdvertisement"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/advertisements": {"get": {"summary": "Get Advertisements", "description": "Получить список всех объявлений.\n\nArgs:\n    session(AsyncSession): сессия подключения к бд\n\nReturns:\n    list: объявления", "operationId": "get_advertisements_api_advertisements_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {}, "type": "array", "title": "Response Get Advertisements Api Advertisements Get"}}}}}}}, "/api/advertisements/{ad_id}": {"get": {"summary": "Get Advertisement", "description": "Получить объявление по id.\n\nArgs:\n    ad_id (int): id объявления\n    session(AsyncSession): сессия подключения к бд\n\nRaises:\n    HTTPException: объявление с указанным id не найдено\n\nReturns:\n    Advertisement: объявление", "operationId": "get_advertisement_api_advertisements__ad_id__get", "parameters": [{"name": "ad_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Ad Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Advertisement"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"summary": "Remove Advertisement", "description": "Удаление объявления.\n\nArgs:\n    ad_id (Annotated[int, Ge): id объявления\n    current_user (Annotated[User, Depends): текущий пользователь\n    session(AsyncSession): сессия подключения к бд\n\nRaises:\n    HTTPException: объявление с указанным id не найдено\n    HTTPException: текущий пользователь не является владельцем объявления\n\nReturns:\n    Response: _description_", "operationId": "remove_advertisement_api_advertisements__ad_id__delete", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "ad_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Ad Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AccessToken": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}}, "type": "object", "required": ["access_token", "token_type"], "title": "AccessToken", "description": "Модель токена доступа."}, "Advertisement": {"properties": {"id": {"type": "integer", "title": "Id"}, "category": {"type": "string", "title": "Category"}, "title": {"type": "string", "title": "Title"}, "price": {"type": "integer", "title": "Price"}, "description": {"type": "string", "title": "Description"}, "owner": {"$ref": "#/components/schemas/User"}}, "type": "object", "required": ["id", "category", "title", "price", "description", "owner"], "title": "Advertisement"}, "Body_auth_for_access_token_api_users_auth_post": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_auth_for_access_token_api_users_auth_post"}, "CreateAdvertisement": {"properties": {"category": {"type": "string", "enum": ["Sell", "Buy", "Service"], "title": "Category"}, "title": {"type": "string", "maxLength": 200, "title": "Title"}, "price": {"type": "integer", "minimum": 0.0, "title": "Price"}, "description": {"type": "string", "maxLength": 1000, "title": "Description"}}, "type": "object", "required": ["category", "title", "price", "description"], "title": "CreateAdvertisement", "description": "Модель для создания объявления."}, "CreateUser": {"properties": {"username": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Username"}, "password": {"type": "string", "maxLength": 100, "minLength": 1, "title": "Password"}}, "type": "object", "required": ["username", "password"], "title": "CreateUser", "description": "Модель для создания пользователя."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "User": {"properties": {"user_id": {"type": "integer", "title": "User Id"}, "username": {"type": "string", "title": "Username"}, "password_hash": {"type": "string", "title": "Password Hash"}, "is_admin": {"type": "boolean", "title": "Is Admin"}}, "type": "object", "required": ["user_id", "username", "password_hash", "is_admin"], "title": "User"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/users/auth"}}}}}}